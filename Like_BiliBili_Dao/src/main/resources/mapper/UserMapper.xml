<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.grazy.mapper.UserMapper">

    <select id="getUserByPhone" resultType="com.grazy.domain.User">
        select * from t_user where phone = #{phone}
    </select>


    <insert id="addUser" useGeneratedKeys="true" keyProperty="id">
        insert into t_user(phone,
                           email,
                           password,
                           salt,
                           createTime)
            values(
                      #{phone},
                      #{email},
                      #{password},
                      #{salt},
                      #{createTime}
                  )
    </insert>


    <insert id="addUserInfo">
        insert into t_user_info(userId,
                                nick,
                                sign,
                                gender,
                                birth,
                                createTime
        ) values (
                     #{userId},
                     #{nick},
                     #{sign},
                     #{gender},
                     #{birth},
                     #{createTime}
                 )
    </insert>


    <select id="selectUserById" resultType="com.grazy.domain.User">
        select * from t_user where id = #{id}
    </select>


    <select id="selectUserInfoById" resultType="com.grazy.domain.UserInfo">
        select * from t_user_info
            <where>
                <if test="Ids != null and Ids.size > 0">
                    userId in
                    <foreach collection="Ids" item="userId" open="(" close=")" index="index" separator=",">
                        #{userId}
                    </foreach>
                </if>
            </where>
    </select>



    <update id="updateUserInfoById">
        update
            t_user_info
        set
            <if test="userInfo.nick != null and userInfo.nick != '' ">
                nick = #{userInfo.nick}
            </if>
            <if test="userInfo.avatar != null" >
                avatar = #{userInfo.avatar}
            </if>
            <if test="userInfo.sign != null">
                sign = #{userInfo.sign}
            </if>
            <if test="userInfo.birth != null and userInfo.birth != '' ">
                birth =  #{userInfo.birth}
            </if>
            <if test="userInfo.gender != null and userInfo.gender != '' ">
                gender = #{userInfo.gender}
            </if>
            updateTime = #{userInfo.updateTime}
        where
            userid = #{userId}
    </update>


    <update id="updateUserById">
        update
        t_user
        set
        <if test="user.phone != null and user.phone != ''">
            phone = #{user.phone},
        </if>
        <if test="user.email != null and user.email != ''">
            email = #{user.email},
        </if>
        <if test="user.password != null and user.password != ''">
            password = #{user.password},
        </if>
        updateTime = #{user.updateTime}
        where
        id = #{userId}
    </update>


    <select id="getUserByEmail" resultType="com.grazy.domain.User">
        select * from t_user where email = #{email}
    </select>


    <select id="pageCountUserInfo" resultType="java.lang.Integer">
        select
            COUNT(1)
        from
            t_user_info
        <where>
            <if test="condition != null and condition != '' ">
                nick like concat('%',#{condition}, '%')
            </if>
        </where>
        order by id desc
    </select>


    <select id="pageListUserInfo" resultType="com.grazy.domain.UserInfo">
        select
            *
        from
            t_user_info
        <where>
            <if test="condition != null and condition != '' ">
                nick like concat('%',#{condition}, '%')
            </if>
        </where>
        order by id desc
        limit #{startNumber},#{limit}
    </select>


    <delete id="deleteRefreshToken">
        delete from t_refresh_token where refreshToken = #{refreshToken} and userId = #{userId}
    </delete>


    <insert id="insertRefreshToken">
        insert into
            t_refresh_token(
                    userId,
                    refreshToken,
                    createTime
                )values(
                    #{userId},
                    #{refreshToken},
                    #{createTime}
                )
    </insert>


    <select id="selectRefreshToken" resultType="com.grazy.auth.RefreshTokenDetail">
        select * from t_refresh_token where refreshToken = #{refreshToken}
    </select>
</mapper>